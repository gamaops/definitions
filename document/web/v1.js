/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var document_proto_kinds_pb = require('../../document/web/kinds');
goog.object.extend(proto, document_proto_kinds_pb);
goog.exportSymbol('proto.document.v1.AddDocumentRequest', null, global);
goog.exportSymbol('proto.document.v1.AddDocumentResponse', null, global);
goog.exportSymbol('proto.document.v1.Document', null, global);
goog.exportSymbol('proto.document.v1.DocumentFile', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.document.v1.DocumentFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.document.v1.DocumentFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.document.v1.DocumentFile.displayName = 'proto.document.v1.DocumentFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.document.v1.Document = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.document.v1.Document.oneofGroups_);
};
goog.inherits(proto.document.v1.Document, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.document.v1.Document.displayName = 'proto.document.v1.Document';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.document.v1.AddDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.document.v1.AddDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.document.v1.AddDocumentRequest.displayName = 'proto.document.v1.AddDocumentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.document.v1.AddDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.document.v1.AddDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.document.v1.AddDocumentResponse.displayName = 'proto.document.v1.AddDocumentResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.document.v1.DocumentFile.prototype.toObject = function(opt_includeInstance) {
  return proto.document.v1.DocumentFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.document.v1.DocumentFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.document.v1.DocumentFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    documentId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    validatedAt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isValid: jspb.Message.getFieldWithDefault(msg, 4, false),
    createdAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdJobId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    updatedJobId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    subject: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.document.v1.DocumentFile}
 */
proto.document.v1.DocumentFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.document.v1.DocumentFile;
  return proto.document.v1.DocumentFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.document.v1.DocumentFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.document.v1.DocumentFile}
 */
proto.document.v1.DocumentFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatedAt(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedJobId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedJobId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.document.v1.DocumentFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.document.v1.DocumentFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.document.v1.DocumentFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.document.v1.DocumentFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocumentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValidatedAt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedJobId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUpdatedJobId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string fileId = 1;
 * @return {string}
 */
proto.document.v1.DocumentFile.prototype.getFileid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.document.v1.DocumentFile.prototype.setFileid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string documentId = 2;
 * @return {string}
 */
proto.document.v1.DocumentFile.prototype.getDocumentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.document.v1.DocumentFile.prototype.setDocumentid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string validatedAt = 3;
 * @return {string}
 */
proto.document.v1.DocumentFile.prototype.getValidatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.document.v1.DocumentFile.prototype.setValidatedat = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool isValid = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.document.v1.DocumentFile.prototype.getIsvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.document.v1.DocumentFile.prototype.setIsvalid = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string createdAt = 5;
 * @return {string}
 */
proto.document.v1.DocumentFile.prototype.getCreatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.document.v1.DocumentFile.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string createdJobId = 6;
 * @return {string}
 */
proto.document.v1.DocumentFile.prototype.getCreatedjobid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.document.v1.DocumentFile.prototype.setCreatedjobid = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updatedAt = 7;
 * @return {string}
 */
proto.document.v1.DocumentFile.prototype.getUpdatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.document.v1.DocumentFile.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string updatedJobId = 8;
 * @return {string}
 */
proto.document.v1.DocumentFile.prototype.getUpdatedjobid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.document.v1.DocumentFile.prototype.setUpdatedjobid = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string subject = 9;
 * @return {string}
 */
proto.document.v1.DocumentFile.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.document.v1.DocumentFile.prototype.setSubject = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.document.v1.Document.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.document.v1.Document.ValueCase = {
  VALUE_NOT_SET: 0,
  braCpf: 3,
  braCnh: 4
};

/**
 * @return {proto.document.v1.Document.ValueCase}
 */
proto.document.v1.Document.prototype.getValueCase = function() {
  return /** @type {proto.document.v1.Document.ValueCase} */(jspb.Message.computeOneofCase(this, proto.document.v1.Document.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.document.v1.Document.prototype.toObject = function(opt_includeInstance) {
  return proto.document.v1.Document.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.document.v1.Document} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.document.v1.Document.toObject = function(includeInstance, msg) {
  var f, obj = {
    documentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    braCpf: (f = msg.getBraCpf()) && document_proto_kinds_pb.BraCpf.toObject(includeInstance, f),
    braCnh: (f = msg.getBraCnh()) && document_proto_kinds_pb.BraCnh.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdJobId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    updatedJobId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    audience: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.document.v1.Document}
 */
proto.document.v1.Document.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.document.v1.Document;
  return proto.document.v1.Document.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.document.v1.Document} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.document.v1.Document}
 */
proto.document.v1.Document.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 3:
      var value = new document_proto_kinds_pb.BraCpf;
      reader.readMessage(value,document_proto_kinds_pb.BraCpf.deserializeBinaryFromReader);
      msg.setBraCpf(value);
      break;
    case 4:
      var value = new document_proto_kinds_pb.BraCnh;
      reader.readMessage(value,document_proto_kinds_pb.BraCnh.deserializeBinaryFromReader);
      msg.setBraCnh(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedJobId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedJobId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAudience(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.document.v1.Document.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.document.v1.Document.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.document.v1.Document} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.document.v1.Document.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocumentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBraCpf();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      document_proto_kinds_pb.BraCpf.serializeBinaryToWriter
    );
  }
  f = message.getBraCnh();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      document_proto_kinds_pb.BraCnh.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedJobId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUpdatedJobId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAudience();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string documentId = 1;
 * @return {string}
 */
proto.document.v1.Document.prototype.getDocumentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.document.v1.Document.prototype.setDocumentid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subject = 2;
 * @return {string}
 */
proto.document.v1.Document.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.document.v1.Document.prototype.setSubject = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional document.kinds.BraCpf braCpf = 3;
 * @return {?proto.document.kinds.BraCpf}
 */
proto.document.v1.Document.prototype.getBracpf = function() {
  return /** @type{?proto.document.kinds.BraCpf} */ (
    jspb.Message.getWrapperField(this, document_proto_kinds_pb.BraCpf, 3));
};


/** @param {?proto.document.kinds.BraCpf|undefined} value */
proto.document.v1.Document.prototype.setBracpf = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.document.v1.Document.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.document.v1.Document.prototype.clearBracpf = function() {
  this.setBraCpf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.document.v1.Document.prototype.hasBracpf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional document.kinds.BraCnh braCnh = 4;
 * @return {?proto.document.kinds.BraCnh}
 */
proto.document.v1.Document.prototype.getBracnh = function() {
  return /** @type{?proto.document.kinds.BraCnh} */ (
    jspb.Message.getWrapperField(this, document_proto_kinds_pb.BraCnh, 4));
};


/** @param {?proto.document.kinds.BraCnh|undefined} value */
proto.document.v1.Document.prototype.setBracnh = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.document.v1.Document.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.document.v1.Document.prototype.clearBracnh = function() {
  this.setBraCnh(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.document.v1.Document.prototype.hasBracnh = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string createdAt = 5;
 * @return {string}
 */
proto.document.v1.Document.prototype.getCreatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.document.v1.Document.prototype.setCreatedat = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string createdJobId = 6;
 * @return {string}
 */
proto.document.v1.Document.prototype.getCreatedjobid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.document.v1.Document.prototype.setCreatedjobid = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updatedAt = 7;
 * @return {string}
 */
proto.document.v1.Document.prototype.getUpdatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.document.v1.Document.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string updatedJobId = 8;
 * @return {string}
 */
proto.document.v1.Document.prototype.getUpdatedjobid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.document.v1.Document.prototype.setUpdatedjobid = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string audience = 9;
 * @return {string}
 */
proto.document.v1.Document.prototype.getAudience = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.document.v1.Document.prototype.setAudience = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.document.v1.AddDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.document.v1.AddDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.document.v1.AddDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.document.v1.AddDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    document: (f = msg.getDocument()) && proto.document.v1.Document.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.document.v1.AddDocumentRequest}
 */
proto.document.v1.AddDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.document.v1.AddDocumentRequest;
  return proto.document.v1.AddDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.document.v1.AddDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.document.v1.AddDocumentRequest}
 */
proto.document.v1.AddDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.document.v1.Document;
      reader.readMessage(value,proto.document.v1.Document.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.document.v1.AddDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.document.v1.AddDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.document.v1.AddDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.document.v1.AddDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.document.v1.Document.serializeBinaryToWriter
    );
  }
};


/**
 * optional Document document = 1;
 * @return {?proto.document.v1.Document}
 */
proto.document.v1.AddDocumentRequest.prototype.getDocument = function() {
  return /** @type{?proto.document.v1.Document} */ (
    jspb.Message.getWrapperField(this, proto.document.v1.Document, 1));
};


/** @param {?proto.document.v1.Document|undefined} value */
proto.document.v1.AddDocumentRequest.prototype.setDocument = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.document.v1.AddDocumentRequest.prototype.clearDocument = function() {
  this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.document.v1.AddDocumentRequest.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.document.v1.AddDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.document.v1.AddDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.document.v1.AddDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.document.v1.AddDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    documentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bucketId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.document.v1.AddDocumentResponse}
 */
proto.document.v1.AddDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.document.v1.AddDocumentResponse;
  return proto.document.v1.AddDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.document.v1.AddDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.document.v1.AddDocumentResponse}
 */
proto.document.v1.AddDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.document.v1.AddDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.document.v1.AddDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.document.v1.AddDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.document.v1.AddDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocumentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBucketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string documentId = 1;
 * @return {string}
 */
proto.document.v1.AddDocumentResponse.prototype.getDocumentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.document.v1.AddDocumentResponse.prototype.setDocumentid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bucketId = 2;
 * @return {string}
 */
proto.document.v1.AddDocumentResponse.prototype.getBucketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.document.v1.AddDocumentResponse.prototype.setBucketid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.document.v1);
